" Prepare for plugins and vundle
set nocompatible
filetype off

set rtp+=~/.dotfiles/vim/bundle/Vundle.vim/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Plugin 'gmarik/vundle'

" Color schemes
Plugin 'flazz/vim-colorschemes'

" The bundles you install will be listed here
Plugin 'bling/vim-airline'
set laststatus=2
set t_Co=256

" Python Code completion
" Plugin 'davidhalter/jedi-vim'

" Auto-pair for parentesis completion
Plugin 'jiangmiao/auto-pairs'

" Supertab for omnicompletion
Plugin 'ervandew/supertab'

" Javascript codecompletion
Plugin 'marijnh/tern_for_vim'

" Allmost universal codecompletion
Plugin 'Valloric/YouCompleteMe'

" Directory listing and manipulation
Plugin 'scrooloose/nerdtree'
map <F2> :NERDTreeToggle<CR>

" Change the font size in vim
Plugin 'drmikehenry/vim-fontsize'

" Track the engine.
Plugin 'SirVer/ultisnips'

" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'

" Php autocomplete
Plugin 'Shougo/vimproc'
Plugin 'Shougo/unite.vim'
Plugin 'm2mdas/phpcomplete-extended'

" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<c-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<c-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<c-n>'

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

" ************************************
" The rest of your config follows here
filetype plugin indent on
" set omnifunc=syntaxcomplete#Complete
syntax on

" Autoreload of .vimrc
autocmd! bufwritepost .vimrc source %

"set the map leader key
let mapleader=","

" Better copy & paste
set pastetoggle=<F3>
set clipboard=unnamed

" set the tabwidth to 4
set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab

" run python directly from vim
map <F5> :w<CR>:!python %<CR>

" Bind nohl
" Removes highlight of your last search
" ``<C>`` stands for ``CTRL`` and therefore ``<C-n>`` stands for ``CTRL+n``
"""noremap <C-n> :nohl<CR>
"""vnoremap <C-n> :nohl<CR>
"""inoremap <C-n> :nohl<CR>


" Quicksave command
noremap <C-Z> :update<CR>
vnoremap <C-Z> <C-C>:update<CR>
inoremap <C-Z> <C-O>:update<CR>


" Quick quit command
noremap <Leader>e :quit<CR>  " Quit current window
noremap <Leader>E :qa!<CR>   " Quit all windows


" bind Ctrl+<movement> keys to move around the windows, instead of using Ctrl+w + <movement>
" Every unnecessary keystroke that can be saved is good for your health :)
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h


" easier moving between tabs
map <Leader>n <esc>:tabprevious<CR>
map <Leader>m <esc>:tabnext<CR>


" map sort function to a key
vnoremap <Leader>s :sort<CR>


" easier moving of code blocks
" Try to go into visual mode (v), thenselect several lines of code here and
" then press ``>`` several times.
nmap > >>
nmap < <<
vmap > >gv
vmap < <gv

" Show whitespace
" MUST be inserted BEFORE the colorscheme command
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=lightred guibg=lightred 
au InsertLeave * match ExtraWhitespace /\s\+$/

color mac_classic
" highlight Pmenu ctermfg=1 ctermbg=3 guifg=#ffffff guibg=#0000ff
highlight Pmenu ctermfg=red ctermbg=lightred

" Showing line numbers and length
set number  " show line numbers
set tw=79   " width of document (used by gd)
set nowrap  " don't automatically wrap on load
set fo-=t   " don't automatically wrap text when typing
set colorcolumn=80
highlight ColorColumn ctermbg=lightgrey
